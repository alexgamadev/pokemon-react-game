[{"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\index.js":"1","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\App\\index.js":"2","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\PokemonCard\\index.js":"3","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\GenerationPicker\\index.js":"4","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Assets\\Types\\index.js":"5","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\ScoreCounter\\index.js":"6","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\CardDisplay\\index.js":"7","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useGame.js":"8","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useGenerations.js":"9","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useSpecies.js":"10","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useCardBuffer.js":"11","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useCards.js":"12","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\usePokeAPI.js":"13","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useGameTracker.js":"14","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Utils\\ArrayUtils.js":"15","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\GenerationSelect\\index.js":"16","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Assets\\Regions\\index.js":"17","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\GameoverModal\\index.js":"18","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Assets\\highscores.js":"19","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useHighscores.js":"20","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\index.js":"21","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\App\\index.js":"22","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useGame.js":"23","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\GenerationPicker\\index.js":"24","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\CardDisplay\\index.js":"25","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\ScoreCounter\\index.js":"26","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useCardBuffer.js":"27","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useGenerations.js":"28","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useSpecies.js":"29","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useGameTracker.js":"30","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useCards.js":"31","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useHighscores.js":"32","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Utils\\ArrayUtils.js":"33","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\GenerationSelect\\index.js":"34","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\usePokeAPI.js":"35","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\PokemonCard\\index.js":"36","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\GameoverModal\\index.js":"37","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Assets\\Regions\\index.js":"38","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Assets\\Types\\index.js":"39"},{"size":186,"mtime":1612539480960,"results":"40","hashOfConfig":"41"},{"size":1316,"mtime":1612613136820,"results":"42","hashOfConfig":"41"},{"size":1815,"mtime":1612113114988,"results":"43","hashOfConfig":"41"},{"size":948,"mtime":1612611107946,"results":"44","hashOfConfig":"41"},{"size":2033,"mtime":1611697974116,"results":"45","hashOfConfig":"41"},{"size":536,"mtime":1612557834020,"results":"46","hashOfConfig":"41"},{"size":985,"mtime":1612613152032,"results":"47","hashOfConfig":"41"},{"size":5393,"mtime":1612611674005,"results":"48","hashOfConfig":"41"},{"size":1350,"mtime":1612612435115,"results":"49","hashOfConfig":"41"},{"size":961,"mtime":1612385071101,"results":"50","hashOfConfig":"41"},{"size":513,"mtime":1612606392002,"results":"51","hashOfConfig":"41"},{"size":1802,"mtime":1612279330311,"results":"52","hashOfConfig":"41"},{"size":965,"mtime":1612121904915,"results":"53","hashOfConfig":"41"},{"size":2477,"mtime":1612612864257,"results":"54","hashOfConfig":"41"},{"size":398,"mtime":1612275506874,"results":"55","hashOfConfig":"41"},{"size":826,"mtime":1612558391219,"results":"56","hashOfConfig":"41"},{"size":429,"mtime":1612454984175,"results":"57","hashOfConfig":"41"},{"size":1051,"mtime":1612613457059,"results":"58","hashOfConfig":"41"},{"size":119,"mtime":1612558420201,"results":"59","hashOfConfig":"41"},{"size":726,"mtime":1612612982732,"results":"60","hashOfConfig":"41"},{"size":186,"mtime":1612539480960,"results":"61","hashOfConfig":"62"},{"size":1316,"mtime":1612613136820,"results":"63","hashOfConfig":"62"},{"size":5393,"mtime":1612611674005,"results":"64","hashOfConfig":"62"},{"size":948,"mtime":1612611107946,"results":"65","hashOfConfig":"62"},{"size":985,"mtime":1612613152032,"results":"66","hashOfConfig":"62"},{"size":536,"mtime":1612557834020,"results":"67","hashOfConfig":"62"},{"size":513,"mtime":1612606392002,"results":"68","hashOfConfig":"62"},{"size":1350,"mtime":1612612435115,"results":"69","hashOfConfig":"62"},{"size":961,"mtime":1612385071101,"results":"70","hashOfConfig":"62"},{"size":2477,"mtime":1612612864257,"results":"71","hashOfConfig":"62"},{"size":1802,"mtime":1612279330311,"results":"72","hashOfConfig":"62"},{"size":726,"mtime":1612612982732,"results":"73","hashOfConfig":"62"},{"size":398,"mtime":1612275506874,"results":"74","hashOfConfig":"62"},{"size":826,"mtime":1612558391219,"results":"75","hashOfConfig":"62"},{"size":965,"mtime":1612121904915,"results":"76","hashOfConfig":"62"},{"size":1815,"mtime":1612113114988,"results":"77","hashOfConfig":"62"},{"size":1051,"mtime":1612613457059,"results":"78","hashOfConfig":"62"},{"size":429,"mtime":1612454984175,"results":"79","hashOfConfig":"62"},{"size":2033,"mtime":1611697974116,"results":"80","hashOfConfig":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"p7gk1v",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"9c3121",{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"124"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\index.js",[],["163","164"],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\App\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\PokemonCard\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\GenerationPicker\\index.js",["165"],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Assets\\Types\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\ScoreCounter\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\CardDisplay\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useGame.js",["166","167"],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useGenerations.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useSpecies.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useCardBuffer.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useCards.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\usePokeAPI.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useGameTracker.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Utils\\ArrayUtils.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\GenerationSelect\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Assets\\Regions\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Components\\GameoverModal\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\Assets\\highscores.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\memory-game\\src\\CustomHooks\\useHighscores.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\index.js",[],["168","169"],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\App\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useGame.js",["170","171"],"import { useCallback, useEffect, useState } from 'react';\r\nimport { partition, shuffleArray } from '../Utils/ArrayUtils';\r\nimport useCardBuffer from './useCardBuffer';\r\nimport useSpecies from './useSpecies';\r\nimport useGenerations from './useGenerations';\r\nimport useCards from './useCards';\r\nimport useGameTracker from './useGameTracker';\r\nimport useHighscores from './useHighscores';\r\n\r\nconst BUFFER_SIZE = 20;\r\n\r\nconst useGame = () => {\r\n    //Custom \"hooks\"\r\n    const [setSelectedGen, selectedGen, generationData] = useGenerations();\r\n    const [speciesList, refreshSpecies, loadSpeciesData] = useSpecies();\r\n    const [queueCards, shiftCards, buffer] = useCardBuffer();\r\n    const [loadCards] = useCards();\r\n    const [setHighscore, getHighscore] = useHighscores();\r\n     //Change to use reducer if have time\r\n     const [\r\n        unSelected,\r\n        selected,\r\n        initUnselected,\r\n        addUnselected,\r\n        addSelected,\r\n        shiftUnselected,\r\n        shiftSelected,\r\n        score,\r\n        remaining,\r\n        percentageScore,\r\n        resetTrackers,\r\n    ] = useGameTracker();\r\n\r\n    //Change to use reducer if have time\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [isStarted, setIsStarted] = useState(false);\r\n    const [isProcessing, setIsProcessing] = useState(false);\r\n    const [displayList, setDisplayList] = useState([]);\r\n    const [isGameover, setGameover] = useState(false);\r\n\r\n    const initBuffer = useCallback(async (newCards) => {\r\n        queueCards(await loadCards(newCards, loadSpeciesData));\r\n        setIsLoaded(true);\r\n        setIsProcessing(false);\r\n    }, [loadCards, loadSpeciesData, queueCards]);\r\n\r\n    //Initialise Unselected\r\n    useEffect(() => {\r\n        if(speciesList?.length > 0) {\r\n            initUnselected(speciesList);\r\n        }\r\n    }, [speciesList, initUnselected]);\r\n\r\n    //Initialise card buffer\r\n    useEffect(() => {\r\n        if(isStarted && !isLoaded && !isProcessing) {\r\n            setIsProcessing(true);\r\n            if(unSelected?.current.length >= BUFFER_SIZE) {\r\n                const newCards = shiftUnselected(20);\r\n                (async () => {\r\n                    await initBuffer(newCards);\r\n                })();\r\n            } else {\r\n                setIsProcessing(false);\r\n            }\r\n        }    \r\n    }, [unSelected, isStarted, isLoaded, isProcessing, initBuffer, shiftUnselected]);\r\n\r\n    //Update display list\r\n    useEffect(() => {\r\n        if(isStarted && isLoaded && displayList?.length <= 0) {\r\n            \r\n            //Load display list\r\n            setDisplayList(shiftCards(4));\r\n            console.log(\"DISPLAY\", displayList);\r\n\r\n            //Load new elements from unselected to buffer\r\n            if(displayList?.length >= 4)\r\n            {\r\n                const newCards = shiftUnselected(4);\r\n                queueLoadedCards(newCards);\r\n            }\r\n            \r\n        }\r\n    }, [isStarted, isLoaded, shiftCards, shiftUnselected, queueCards, displayList, loadSpeciesData]);\r\n\r\n    const startGame = () => {\r\n        buffer.current = [];\r\n        setIsStarted(true);\r\n        refreshSpecies(generationData, selectedGen);\r\n    }\r\n\r\n    console.log(\"Buffer\", buffer);\r\n\r\n    const resetGame = (score = null) => {\r\n        //Clear buffer\r\n        buffer.current = [];\r\n        //Clear unselected, selected, score and remaining\r\n        resetTrackers();\r\n        //Clear display list\r\n        setDisplayList([]);\r\n        //Set isProcessing, isStarted abd isLoaded to false\r\n        setIsLoaded(false);\r\n        setIsProcessing(false);\r\n        setIsStarted(false);\r\n        setGameover(false);\r\n        if(score != null) {\r\n            setHighscore(selectedGen, score);\r\n        }    \r\n    }\r\n\r\n    const queueLoadedCards = async (newCards) => {\r\n        const cards = await loadCards(newCards, loadSpeciesData);\r\n        if(isStarted) {\r\n            queueCards(cards);\r\n        }\r\n    }\r\n\r\n    const clickCard = (card) => {\r\n        //Shift 4 cards off buffer\r\n        const shiftedCards = displayList;\r\n\r\n        //Add non selected cards back to unselected\r\n        const [newUnselect, newSelect] = partition(shiftedCards, (shiftCard => shiftCard.species !== card.species && shiftCard.selected !== true));\r\n\r\n        //Check for gameover\r\n        if(card.selected) {\r\n            //resetGame();\r\n            setGameover(true);\r\n        } else {\r\n            addSelected(newSelect.map((card) => ({name: card.species, selected: card.selected})));\r\n            addUnselected(newUnselect.map((card) => ({name: card.species, selected: false})));\r\n            setDisplayList(shiftCards(4));\r\n\r\n            //Load new elements from unselected to buffer\r\n            let newCards = [];\r\n            if(selected?.current.length > 0) {\r\n                newCards = shiftUnselected(3);\r\n                newCards.push(...shiftSelected(1));\r\n            } else {\r\n                newCards = shiftUnselected(4);\r\n            }\r\n\r\n            shuffleArray(newCards);\r\n            \r\n            queueLoadedCards(newCards);\r\n        }\r\n    }\r\n\r\n    return [\r\n        score,\r\n        remaining,\r\n        setSelectedGen,\r\n        selectedGen,\r\n        generationData,\r\n        isLoaded,\r\n        clickCard,\r\n        displayList,\r\n        startGame,\r\n        isStarted,\r\n        isGameover,\r\n        resetGame,\r\n        getHighscore,\r\n    ];\r\n}\r\n\r\nexport default useGame;","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\GenerationPicker\\index.js",["172"],"import React from 'react';\r\nimport styles from './GenerationPicker.module.css';\r\nimport GenerationSelect from '../GenerationSelect/index.js';\r\nimport Carousel from '@brainhubeu/react-carousel';\r\nimport '@brainhubeu/react-carousel/lib/style.css';\r\n\r\n\r\nconst GenerationPicker = (props) => {\r\n    const genSelected = (id) => {\r\n        props.onGenChanged(id);\r\n    }\r\n\r\n    return (\r\n        <Carousel\r\n            slidesPerPage={4}\r\n            clickToChange\r\n            centered\r\n            onChange={e => genSelected(e+1)}\r\n        >\r\n            {props.data?.map((generation, index) => <GenerationSelect \r\n            key={generation.name} \r\n            generation={generation} \r\n            onClicked={genSelected} \r\n            isStarted={props.isStarted} \r\n            startGame={props.startGame} \r\n            highscore={props.getHighscore(generation.id)}/>)\r\n            }\r\n        </Carousel>\r\n    );\r\n}\r\n\r\nexport default GenerationPicker;","C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\CardDisplay\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\ScoreCounter\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useCardBuffer.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useGenerations.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useSpecies.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useGameTracker.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useCards.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\useHighscores.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Utils\\ArrayUtils.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\GenerationSelect\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\CustomHooks\\usePokeAPI.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\PokemonCard\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Components\\GameoverModal\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Assets\\Regions\\index.js",[],"C:\\Users\\alexgamadev\\Desktop\\Web Dev\\React\\pokemon-react-game\\src\\Assets\\Types\\index.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"181","line":30,"column":9,"nodeType":"179","messageId":"180","endLine":30,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":85,"column":8,"nodeType":"184","endLine":85,"endColumn":100,"suggestions":"185"},{"ruleId":"173","replacedBy":"186"},{"ruleId":"175","replacedBy":"187"},{"ruleId":"177","severity":1,"message":"181","line":30,"column":9,"nodeType":"179","messageId":"180","endLine":30,"endColumn":24},{"ruleId":"182","severity":1,"message":"183","line":85,"column":8,"nodeType":"184","endLine":85,"endColumn":100,"suggestions":"188"},{"ruleId":"177","severity":1,"message":"178","line":2,"column":8,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'percentageScore' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'queueLoadedCards'. Either include it or remove the dependency array.","ArrayExpression",["191"],["189"],["190"],["192"],"no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"193","fix":"195"},"Update the dependencies array to be: [isStarted, isLoaded, shiftCards, shiftUnselected, queueCards, displayList, loadSpeciesData, queueLoadedCards]",{"range":"196","text":"197"},{"range":"198","text":"197"},[2924,3016],"[isStarted, isLoaded, shiftCards, shiftUnselected, queueCards, displayList, loadSpeciesData, queueLoadedCards]",[2924,3016]]